env=dev
### datasource
datasource.driver.class.name=com.mysql.cj.jdbc.Driver
datasource.jdbc.url=
datasource.username=
datasource.password=
datasource.type=com.alibaba.druid.pool.DruidDataSource

### druid
# 初始化时建立物理连接的个数
datasource.druid.initial.size=5
# 最大连接池数量
datasource.druid.max.active=20
# 最小连接池数量
datasource.druid.min.idle=5
# 获取连接时最大等待时间，单位毫秒
datasource.druid.max.wait=60000
# 用来检测连接是否有效的sql，要求是一个查询语句
datasource.druid.validation.query=select 1
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
datasource.druid.time.between.eviction.runs.millis=60000
# 连接保持空闲而不被驱逐的最长时间
datasource.druid.min.evictable.idle.time.millis=300000
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
datasource.druid.test.on.borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
datasource.druid.test.on.return=false
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
datasource.druid.test.while.idle=true

### redis
# 服务器地址
spring.redis.host=
# Redis数据库索引（默认为0）
spring.redis.database=
# Redis 端口号
spring.redis.port=
# Redis 密码
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=50
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=50
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=3000
